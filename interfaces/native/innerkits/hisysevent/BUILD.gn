# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

declare_args() {
  hiviewdfx_hitrace_enabaled = false
  if (defined(global_parts_info) &&
      defined(global_parts_info.hiviewdfx_hitrace)) {
    hiviewdfx_hitrace_enabaled = true
  }
}

config("hisysevent_config") {
  visibility = [ "*:*" ]

  include_dirs = [ "//base/hiviewdfx/hisysevent/interfaces/native/innerkits/hisysevent/include" ]
}

ohos_shared_library("libhisysevent") {
  configs = [ ":hisysevent_config" ]

  all_dependent_configs = [ ":hisysevent_config" ]
  public_configs = [ ":hisysevent_config" ]

  sources = [
    "encoded_param.cpp",
    "hisysevent.cpp",
    "hisysevent_c.cpp",
    "raw_data.cpp",
    "raw_data_base_def.cpp",
    "raw_data_encoder.cpp",
    "stringfilter.cpp",
    "transport.cpp",
    "write_controller.cpp",
  ]

  output_name = "libhisysevent"

  install_enable = true

  part_name = "hisysevent"

  install_images = [
    "system",
    "updater",
  ]

  subsystem_name = "hiviewdfx"

  innerapi_tags = [
    "chipsetsdk",
    "platformsdk",
    "sasdk",
  ]

  version_script = "libhisysevent.map"

  external_deps = [
    "bounds_checking_function:libsec_shared",
    "hilog:libhilog",
  ]

  defines = []
  if (hiviewdfx_hitrace_enabaled) {
    external_deps += [ "hitrace:libhitracechain" ]
    defines += [ "HIVIEWDFX_HITRACE_ENABLED" ]
  }
}

ohos_static_library("hisysevent_static_lib_for_tdd") {
  configs = [ ":hisysevent_config" ]

  public_configs = [ ":hisysevent_config" ]

  sources = [
    "encoded_param.cpp",
    "hisysevent.cpp",
    "hisysevent_c.cpp",
    "raw_data.cpp",
    "raw_data_base_def.cpp",
    "raw_data_encoder.cpp",
    "stringfilter.cpp",
    "transport.cpp",
    "write_controller.cpp",
  ]

  output_name = "hisysevent_static_lib_for_tdd"

  part_name = "hisysevent"

  subsystem_name = "hiviewdfx"

  external_deps = [
    "bounds_checking_function:libsec_shared",
    "hilog:libhilog",
  ]

  defines = []
  if (hiviewdfx_hitrace_enabaled) {
    external_deps += [ "hitrace:libhitracechain" ]
    defines += [ "HIVIEWDFX_HITRACE_ENABLED" ]
  }
}
